{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.34.44.8038",
      "templateHash": "15948734192659156459"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "defaultValue": "revolutionising-devops",
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "staticWebAppLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Location for Static Web App"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "App Service Plan SKU"
      }
    },
    "cosmosCapacityMode": {
      "type": "string",
      "defaultValue": "Serverless",
      "allowedValues": [
        "Serverless",
        "Provisioned"
      ],
      "metadata": {
        "description": "CosmosDB capacity mode"
      }
    }
  },
  "variables": {
    "appServiceName": "[format('{0}-api', parameters('baseName'))]",
    "appServicePlanName": "[format('{0}-asp', parameters('baseName'))]",
    "staticWebAppName": "[format('{0}-client', parameters('baseName'))]",
    "cosmosAccountName": "[replace(format('{0}-db', parameters('baseName')), '-', '')]",
    "cosmosDatabaseName": "application",
    "cosmosCollectionName": "items"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServiceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|22-lts",
          "appSettings": [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~22"
            },
            {
              "name": "MONGODB_URI",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2023-04-15').connectionStrings[0].connectionString]"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-03-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('staticWebAppLocation')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "enterpriseGradeCdnStatus": "Disabled"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "MongoDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "databaseAccountOfferType": "Standard",
        "capabilities": [
          {
            "name": "EnableMongo"
          }
        ],
        "apiProperties": {
          "serverVersion": "4.2"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capacity": {
          "totalThroughputLimit": "[if(equals(parameters('cosmosCapacityMode'), 'Provisioned'), 400, null())]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosDatabaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosAccountName'), variables('cosmosDatabaseName'), variables('cosmosCollectionName'))]",
      "properties": {
        "resource": {
          "id": "[variables('cosmosCollectionName')]",
          "shardKey": {
            "_id": "Hash"
          },
          "indexes": [
            {
              "key": {
                "keys": [
                  "_id"
                ]
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('appServiceName')), '2022-03-01').defaultHostName)]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/staticSites', variables('staticWebAppName')), '2022-03-01').defaultHostname]"
    },
    "cosmosAccountName": {
      "type": "string",
      "value": "[variables('cosmosAccountName')]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    }
  }
}