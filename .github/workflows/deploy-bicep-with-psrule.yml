name: Deploy Bicep with PSRule Validation

on:
  workflow_dispatch:
    inputs:
      resourceGroupName:
        description: "Azure Resource Group Name"
        required: true
        default: "ps-rule-rg"
      location:
        description: "Azure Region Location"
        required: true
        default: "australiaeast"
      baseName:
        description: "Base name for resources"
        required: true
        default: "ps-rule"
      staticWebAppLocation:
        description: "Static Web App Location (can be different from main location)"
        required: false
        default: "eastasia"
      appServicePlanSku:
        description: "App Service Plan SKU"
        required: false
        default: "P1V2"
      uploadSarif:
        description: "Upload SARIF results to GitHub (requires GitHub Advanced Security)"
        type: boolean
        required: false
        default: false

# Reduced permissions if not uploading SARIF results
permissions:
  id-token: write
  contents: read
  # security-events: write # Only needed if uploadSarif is true

jobs:
  validate:
    name: Validate Bicep with PSRule
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Export Bicep Template for PSRule Analysis
        shell: pwsh
        run: |
          az bicep install
          mkdir -p out/templates
          az bicep build --file azure-infrastructure.bicep --outfile out/templates/azure-infrastructure.json

      - name: Run PSRule for Azure with detailed output
        id: psrule
        uses: microsoft/ps-rule@v2.9.0
        with:
          modules: "PSRule.Rules.Azure"
          inputPath: out/templates/azure-infrastructure.json
          outputFormat: Sarif
          outputPath: reports/ps-rule-results.sarif

      # Capture the PSRule console output to a file
      - name: Capture PSRule Console Output
        if: always()
        shell: bash
        run: |
          mkdir -p reports
          # Get the step output and save to a file
          cat $GITHUB_STEP_SUMMARY > reports/psrule-console-output.txt
          echo "PSRule console output captured to reports/psrule-console-output.txt"

      - name: Extract Rules Summary
        if: always()
        shell: bash
        run: |
          # Extract the "Rules processed" summary line and save to a separate file
          grep "Rules processed:" reports/psrule-console-output.txt > reports/rules-summary.txt || echo "Rules processed: 0, failed: 0, errored: 0" > reports/rules-summary.txt

          # Also extract it to environment variables for use in other steps
          if grep -q "Rules processed:" reports/rules-summary.txt; then
            SUMMARY=$(cat reports/rules-summary.txt)

            # Extract numbers using regex
            PROCESSED=$(echo $SUMMARY | grep -oP "processed: \K\d+")
            FAILED=$(echo $SUMMARY | grep -oP "failed: \K\d+")
            ERRORED=$(echo $SUMMARY | grep -oP "errored: \K\d+")

            echo "PROCESSED_RULES=$PROCESSED" >> $GITHUB_ENV
            echo "FAILED_RULES=$FAILED" >> $GITHUB_ENV
            echo "ERRORED_RULES=$ERRORED" >> $GITHUB_ENV
            echo "TOTAL_RULES=$PROCESSED" >> $GITHUB_ENV
            echo "PASSED_RULES=$(($PROCESSED - $FAILED - $ERRORED))" >> $GITHUB_ENV

            # Create a colorful summary message for the workflow
            echo "## PSRule Validation Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📊 **$SUMMARY**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Count | Status |" >> $GITHUB_STEP_SUMMARY
            echo "| ------ | ----- | ------ |" >> $GITHUB_STEP_SUMMARY

            # Calculate passed rules
            PASSED=$(($PROCESSED - $FAILED - $ERRORED))
            echo "| ✅ Passed | $PASSED | $([ $PASSED -eq $PROCESSED ] && echo "✓ All rules passed!" || echo "") |" >> $GITHUB_STEP_SUMMARY
            echo "| ❌ Failed | $FAILED | $([ $FAILED -gt 0 ] && echo "⚠️ Action required" || echo "") |" >> $GITHUB_STEP_SUMMARY
            echo "| ⚠️ Errored | $ERRORED | $([ $ERRORED -gt 0 ] && echo "⚠️ Action required" || echo "") |" >> $GITHUB_STEP_SUMMARY
            echo "| 🔄 Total | $PROCESSED | |" >> $GITHUB_STEP_SUMMARY

            echo "Rules summary extracted and processed successfully"
          else
            echo "Could not find rules summary in the output"
            echo "PROCESSED_RULES=0" >> $GITHUB_ENV
            echo "FAILED_RULES=0" >> $GITHUB_ENV
            echo "ERRORED_RULES=0" >> $GITHUB_ENV
            echo "TOTAL_RULES=0" >> $GITHUB_ENV
            echo "PASSED_RULES=0" >> $GITHUB_ENV
          fi

      # Optional: Upload results as SARIF - only runs if uploadSarif is true
      - name: Upload SARIF report
        if: ${{ github.event.inputs.uploadSarif == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/ps-rule-results.sarif
          category: PSRule
        continue-on-error: true
