name: Deploy Azure Application

on:
  workflow_dispatch:

env:
  NODE_VERSION: "22.15"
  AZURE_WEBAPP_NAME: star-wars-collectibles-api
  AZURE_STATIC_WEB_APP_NAME: star-wars-collectibles-client
  MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "app/server/package-lock.json"

      - name: Install dependencies
        run: |
          cd app/server
          npm ci

      - name: Build server
        run: |
          cd app/server
          npm run build --if-present

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: app/server
          startup-command: "npm start"

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          app-settings-json: |
            [
              {
                "name": "MONGODB_URI",
                "value": "${{ secrets.MONGODB_CONNECTION_STRING }}",
                "slotSetting": false
              },
              {
                "name": "NODE_ENV",
                "value": "production",
                "slotSetting": false
              },
              {
                "name": "WEBSITE_CORS_ALLOWED_ORIGINS",
                "value": "https://lively-tree-0be614900.6.azurestaticapps.net",
                "slotSetting": false
              },
              {
                "name": "WEBSITE_CORS_SUPPORT_CREDENTIALS",
                "value": "true",
                "slotSetting": false
              }
            ]

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-deploy-backend
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "app/client/package-lock.json"

      - name: Install dependencies
        run: |
          cd app/client
          npm ci

      - name: Build client
        run: |
          cd app/client
          npm run build
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"
          # Set the API URL to point to our deployed backend
          REACT_APP_API_URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.STATIC_WEB_APP_DEPLOY_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "app/client/build"
          api_location: "" # No API with Static Web App as we're using App Service
          output_location: ""
